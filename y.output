Terminals unused in grammar

   BREAK
   DOT
   QM
   NOT
   OR
   MOD
   DAND
   DOR


State 73 conflicts: 1 shift/reduce
State 92 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declist funclist
    2        | funclist

    3 declist: declist declstmt
    4        | declstmt

    5 declstmt: INT intid assign COMMA intid assign SEMICOLON
    6         | INT intid assign SEMICOLON
    7         | CHAR cid assign COMMA cid assign SEMICOLON
    8         | CHAR cid assign SEMICOLON
    9         | declarray

   10 intid: ID

   11 cid: ID

   12 assign: ASSIGN expr
   13       | %empty

   14 funclist: funclist funcdecl
   15         | funcdecl

   16 funcdecl: INT ifid INT intid COMMA INT intid RPAREN compstmt
   17         | INT ifid INT intid RPAREN compstmt
   18         | INT ifid RPAREN compstmt
   19         | VOID vfid INT intid COMMA INT intid RPAREN compstmt
   20         | VOID vfid LPAREN INT intid RPAREN compstmt
   21         | VOID vfid LPAREN RPAREN compstmt

   22 ifid: ID LPAREN

   23 vfid: ID LPAREN

   24 compstmt: block_start stmtlist block_end

   25 block_start: LBRACE

   26 block_end: RBRACE

   27 stmtlist: stmtlist stmt
   28         | stmt

   29 stmt: declaration
   30     | funcall
   31     | whilestmt
   32     | ifstmt
   33     | returnstmt
   34     | printstmt
   35     | scanstmt
   36     | expr
   37     | SEMICOLON

   38 declaration: INT intid assign COMMA intid assign SEMICOLON
   39            | INT intid assign SEMICOLON
   40            | CHAR cid assign COMMA cid assign SEMICOLON
   41            | CHAR cid assign SEMICOLON
   42            | declarray

   43 funcall: fc expr COMMA expr RPAREN SEMICOLON
   44        | fc expr RPAREN SEMICOLON
   45        | fc RPAREN SEMICOLON

   46 fc: ID LPAREN

   47 whilestmt: WHILE LPAREN expr RPAREN compstmt
   48          | WHILE LPAREN expr RPAREN stmt

   49 ifstmt: IF LPAREN expr RPAREN compstmt
   50       | IF LPAREN expr RPAREN compstmt ELSE compstmt
   51       | IF LPAREN expr RPAREN stmt

   52 returnstmt: RETURN expr SEMICOLON
   53           | RETURN SEMICOLON

   54 printstmt: PRINTF LPAREN STRINGLIT RPAREN SEMICOLON
   55          | PRINTF LPAREN STRINGLIT COMMA ID RPAREN SEMICOLON
   56          | PRINTF LPAREN STRINGLIT COMMA ID COMMA ID RPAREN SEMICOLON

   57 scanstmt: SCANF LPAREN STRINGLIT RPAREN SEMICOLON
   58         | SCANF LPAREN STRINGLIT COMMA AND ID RPAREN SEMICOLON
   59         | SCANF LPAREN STRINGLIT COMMA AND ID COMMA AND ID RPAREN SEMICOLON

   60 expr: identifier
   61     | NUM
   62     | CHLIT

   63 $@1: %empty

   64 expr: identifier ASSIGN $@1 expr
   65     | arrid expr RSQ
   66     | arrid expr RSQ ASSIGN expr
   67     | arrid expr RSQ ASSIGN funcall

   68 $@2: %empty

   69 expr: expr ADD $@2 expr

   70 $@3: %empty

   71 expr: expr SUB $@3 expr

   72 $@4: %empty

   73 expr: expr MUL $@4 expr

   74 $@5: %empty

   75 expr: expr DIV $@5 expr

   76 $@6: %empty

   77 expr: expr GEQ $@6 expr

   78 $@7: %empty

   79 expr: expr LEQ $@7 expr

   80 $@8: %empty

   81 expr: expr GT $@8 expr

   82 $@9: %empty

   83 expr: expr LT $@9 expr

   84 $@10: %empty

   85 expr: expr ISEQ $@10 expr

   86 $@11: %empty

   87 expr: expr NEQ $@11 expr
   88     | LPAREN expr RPAREN
   89     | SUB expr

   90 identifier: ID

   91 arrid: ID LSQ

   92 declarray: INT ID LSQ NUM RSQ SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 10 11 22 23 46 55 56 58 59 90 91 92
NUM (259) 61 92
CHLIT (260) 62
STRINGLIT (261) 54 55 56 57 58 59
INT (262) 5 6 16 17 18 19 20 38 39 92
VOID (263) 19 20 21
CHAR (264) 7 8 40 41
UMINUS (265)
IF (266) 49 50 51
ELSE (267) 50
WHILE (268) 47 48
BREAK (269)
SCANF (270) 57 58 59
PRINTF (271) 54 55 56
RETURN (272) 52 53
LBRACE (273) 25
RBRACE (274) 26
LPAREN (275) 20 21 22 23 46 47 48 49 50 51 54 55 56 57 58 59 88
RPAREN (276) 16 17 18 19 20 21 43 44 45 47 48 49 50 51 54 55 56 57
    58 59 88
SEMICOLON (277) 5 6 7 8 37 38 39 40 41 43 44 45 52 53 54 55 56 57 58
    59 92
COMMA (278) 5 7 16 19 38 40 43 55 56 58 59
DOT (279)
LSQ (280) 91 92
RSQ (281) 65 66 67 92
QM (282)
AND (283) 58 59
NOT (284)
OR (285)
ADD (286) 69
SUB (287) 71 89
MUL (288) 73
DIV (289) 75
MOD (290)
ASSIGN (291) 12 64 66 67
ISEQ (292) 85
GT (293) 81
LT (294) 83
GEQ (295) 77
LEQ (296) 79
DAND (297)
DOR (298)
NEQ (299) 87


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1 2, on right: 0
declist (47)
    on left: 3 4, on right: 1 3
declstmt (48)
    on left: 5 6 7 8 9, on right: 3 4
intid (49)
    on left: 10, on right: 5 6 16 17 19 20 38 39
cid (50)
    on left: 11, on right: 7 8 40 41
assign (51)
    on left: 12 13, on right: 5 6 7 8 38 39 40 41
funclist (52)
    on left: 14 15, on right: 1 2 14
funcdecl (53)
    on left: 16 17 18 19 20 21, on right: 14 15
ifid (54)
    on left: 22, on right: 16 17 18
vfid (55)
    on left: 23, on right: 19 20 21
compstmt (56)
    on left: 24, on right: 16 17 18 19 20 21 47 49 50
block_start (57)
    on left: 25, on right: 24
block_end (58)
    on left: 26, on right: 24
stmtlist (59)
    on left: 27 28, on right: 24 27
stmt (60)
    on left: 29 30 31 32 33 34 35 36 37, on right: 27 28 48 51
declaration (61)
    on left: 38 39 40 41 42, on right: 29
funcall (62)
    on left: 43 44 45, on right: 30 67
fc (63)
    on left: 46, on right: 43 44 45
whilestmt (64)
    on left: 47 48, on right: 31
ifstmt (65)
    on left: 49 50 51, on right: 32
returnstmt (66)
    on left: 52 53, on right: 33
printstmt (67)
    on left: 54 55 56, on right: 34
scanstmt (68)
    on left: 57 58 59, on right: 35
expr (69)
    on left: 60 61 62 64 65 66 67 69 71 73 75 77 79 81 83 85 87 88
    89, on right: 12 36 43 44 47 48 49 50 51 52 64 65 66 67 69 71 73
    75 77 79 81 83 85 87 88 89
$@1 (70)
    on left: 63, on right: 64
$@2 (71)
    on left: 68, on right: 69
$@3 (72)
    on left: 70, on right: 71
$@4 (73)
    on left: 72, on right: 73
$@5 (74)
    on left: 74, on right: 75
$@6 (75)
    on left: 76, on right: 77
$@7 (76)
    on left: 78, on right: 79
$@8 (77)
    on left: 80, on right: 81
$@9 (78)
    on left: 82, on right: 83
$@10 (79)
    on left: 84, on right: 85
$@11 (80)
    on left: 86, on right: 87
identifier (81)
    on left: 90, on right: 60 64
arrid (82)
    on left: 91, on right: 65 66 67
declarray (83)
    on left: 92, on right: 9 42


State 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2
    CHAR  shift, and go to state 3

    program    go to state 4
    declist    go to state 5
    declstmt   go to state 6
    funclist   go to state 7
    funcdecl   go to state 8
    declarray  go to state 9


State 1

    5 declstmt: INT . intid assign COMMA intid assign SEMICOLON
    6         | INT . intid assign SEMICOLON
   16 funcdecl: INT . ifid INT intid COMMA INT intid RPAREN compstmt
   17         | INT . ifid INT intid RPAREN compstmt
   18         | INT . ifid RPAREN compstmt
   92 declarray: INT . ID LSQ NUM RSQ SEMICOLON

    ID  shift, and go to state 10

    intid  go to state 11
    ifid   go to state 12


State 2

   19 funcdecl: VOID . vfid INT intid COMMA INT intid RPAREN compstmt
   20         | VOID . vfid LPAREN INT intid RPAREN compstmt
   21         | VOID . vfid LPAREN RPAREN compstmt

    ID  shift, and go to state 13

    vfid  go to state 14


State 3

    7 declstmt: CHAR . cid assign COMMA cid assign SEMICOLON
    8         | CHAR . cid assign SEMICOLON

    ID  shift, and go to state 15

    cid  go to state 16


State 4

    0 $accept: program . $end

    $end  shift, and go to state 17


State 5

    1 program: declist . funclist
    3 declist: declist . declstmt

    INT   shift, and go to state 1
    VOID  shift, and go to state 2
    CHAR  shift, and go to state 3

    declstmt   go to state 18
    funclist   go to state 19
    funcdecl   go to state 8
    declarray  go to state 9


State 6

    4 declist: declstmt .

    $default  reduce using rule 4 (declist)


State 7

    2 program: funclist .
   14 funclist: funclist . funcdecl

    INT   shift, and go to state 20
    VOID  shift, and go to state 2

    $default  reduce using rule 2 (program)

    funcdecl  go to state 21


State 8

   15 funclist: funcdecl .

    $default  reduce using rule 15 (funclist)


State 9

    9 declstmt: declarray .

    $default  reduce using rule 9 (declstmt)


State 10

   10 intid: ID .
   22 ifid: ID . LPAREN
   92 declarray: INT ID . LSQ NUM RSQ SEMICOLON

    LPAREN  shift, and go to state 22
    LSQ     shift, and go to state 23

    $default  reduce using rule 10 (intid)


State 11

    5 declstmt: INT intid . assign COMMA intid assign SEMICOLON
    6         | INT intid . assign SEMICOLON

    ASSIGN  shift, and go to state 24

    $default  reduce using rule 13 (assign)

    assign  go to state 25


State 12

   16 funcdecl: INT ifid . INT intid COMMA INT intid RPAREN compstmt
   17         | INT ifid . INT intid RPAREN compstmt
   18         | INT ifid . RPAREN compstmt

    INT     shift, and go to state 26
    RPAREN  shift, and go to state 27


State 13

   23 vfid: ID . LPAREN

    LPAREN  shift, and go to state 28


State 14

   19 funcdecl: VOID vfid . INT intid COMMA INT intid RPAREN compstmt
   20         | VOID vfid . LPAREN INT intid RPAREN compstmt
   21         | VOID vfid . LPAREN RPAREN compstmt

    INT     shift, and go to state 29
    LPAREN  shift, and go to state 30


State 15

   11 cid: ID .

    $default  reduce using rule 11 (cid)


State 16

    7 declstmt: CHAR cid . assign COMMA cid assign SEMICOLON
    8         | CHAR cid . assign SEMICOLON

    ASSIGN  shift, and go to state 24

    $default  reduce using rule 13 (assign)

    assign  go to state 31


State 17

    0 $accept: program $end .

    $default  accept


State 18

    3 declist: declist declstmt .

    $default  reduce using rule 3 (declist)


State 19

    1 program: declist funclist .
   14 funclist: funclist . funcdecl

    INT   shift, and go to state 20
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    funcdecl  go to state 21


State 20

   16 funcdecl: INT . ifid INT intid COMMA INT intid RPAREN compstmt
   17         | INT . ifid INT intid RPAREN compstmt
   18         | INT . ifid RPAREN compstmt

    ID  shift, and go to state 32

    ifid  go to state 12


State 21

   14 funclist: funclist funcdecl .

    $default  reduce using rule 14 (funclist)


State 22

   22 ifid: ID LPAREN .

    $default  reduce using rule 22 (ifid)


State 23

   92 declarray: INT ID LSQ . NUM RSQ SEMICOLON

    NUM  shift, and go to state 33


State 24

   12 assign: ASSIGN . expr

    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    CHLIT   shift, and go to state 36
    LPAREN  shift, and go to state 37
    SUB     shift, and go to state 38

    expr        go to state 39
    identifier  go to state 40
    arrid       go to state 41


State 25

    5 declstmt: INT intid assign . COMMA intid assign SEMICOLON
    6         | INT intid assign . SEMICOLON

    SEMICOLON  shift, and go to state 42
    COMMA      shift, and go to state 43


State 26

   16 funcdecl: INT ifid INT . intid COMMA INT intid RPAREN compstmt
   17         | INT ifid INT . intid RPAREN compstmt

    ID  shift, and go to state 44

    intid  go to state 45


State 27

   18 funcdecl: INT ifid RPAREN . compstmt

    LBRACE  shift, and go to state 46

    compstmt     go to state 47
    block_start  go to state 48


State 28

   23 vfid: ID LPAREN .

    $default  reduce using rule 23 (vfid)


State 29

   19 funcdecl: VOID vfid INT . intid COMMA INT intid RPAREN compstmt

    ID  shift, and go to state 44

    intid  go to state 49


State 30

   20 funcdecl: VOID vfid LPAREN . INT intid RPAREN compstmt
   21         | VOID vfid LPAREN . RPAREN compstmt

    INT     shift, and go to state 50
    RPAREN  shift, and go to state 51


State 31

    7 declstmt: CHAR cid assign . COMMA cid assign SEMICOLON
    8         | CHAR cid assign . SEMICOLON

    SEMICOLON  shift, and go to state 52
    COMMA      shift, and go to state 53


State 32

   22 ifid: ID . LPAREN

    LPAREN  shift, and go to state 22


State 33

   92 declarray: INT ID LSQ NUM . RSQ SEMICOLON

    RSQ  shift, and go to state 54


State 34

   90 identifier: ID .
   91 arrid: ID . LSQ

    LSQ  shift, and go to state 55

    $default  reduce using rule 90 (identifier)


State 35

   61 expr: NUM .

    $default  reduce using rule 61 (expr)


State 36

   62 expr: CHLIT .

    $default  reduce using rule 62 (expr)


State 37

   88 expr: LPAREN . expr RPAREN

    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    CHLIT   shift, and go to state 36
    LPAREN  shift, and go to state 37
    SUB     shift, and go to state 38

    expr        go to state 56
    identifier  go to state 40
    arrid       go to state 41


State 38

   89 expr: SUB . expr

    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    CHLIT   shift, and go to state 36
    LPAREN  shift, and go to state 37
    SUB     shift, and go to state 38

    expr        go to state 57
    identifier  go to state 40
    arrid       go to state 41


State 39

   12 assign: ASSIGN expr .
   69 expr: expr . ADD $@2 expr
   71     | expr . SUB $@3 expr
   73     | expr . MUL $@4 expr
   75     | expr . DIV $@5 expr
   77     | expr . GEQ $@6 expr
   79     | expr . LEQ $@7 expr
   81     | expr . GT $@8 expr
   83     | expr . LT $@9 expr
   85     | expr . ISEQ $@10 expr
   87     | expr . NEQ $@11 expr

    ADD   shift, and go to state 58
    SUB   shift, and go to state 59
    MUL   shift, and go to state 60
    DIV   shift, and go to state 61
    ISEQ  shift, and go to state 62
    GT    shift, and go to state 63
    LT    shift, and go to state 64
    GEQ   shift, and go to state 65
    LEQ   shift, and go to state 66
    NEQ   shift, and go to state 67

    $default  reduce using rule 12 (assign)


State 40

   60 expr: identifier .
   64     | identifier . ASSIGN $@1 expr

    ASSIGN  shift, and go to state 68

    $default  reduce using rule 60 (expr)


State 41

   65 expr: arrid . expr RSQ
   66     | arrid . expr RSQ ASSIGN expr
   67     | arrid . expr RSQ ASSIGN funcall

    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    CHLIT   shift, and go to state 36
    LPAREN  shift, and go to state 37
    SUB     shift, and go to state 38

    expr        go to state 69
    identifier  go to state 40
    arrid       go to state 41


State 42

    6 declstmt: INT intid assign SEMICOLON .

    $default  reduce using rule 6 (declstmt)


State 43

    5 declstmt: INT intid assign COMMA . intid assign SEMICOLON

    ID  shift, and go to state 44

    intid  go to state 70


State 44

   10 intid: ID .

    $default  reduce using rule 10 (intid)


State 45

   16 funcdecl: INT ifid INT intid . COMMA INT intid RPAREN compstmt
   17         | INT ifid INT intid . RPAREN compstmt

    RPAREN  shift, and go to state 71
    COMMA   shift, and go to state 72


State 46

   25 block_start: LBRACE .

    $default  reduce using rule 25 (block_start)


State 47

   18 funcdecl: INT ifid RPAREN compstmt .

    $default  reduce using rule 18 (funcdecl)


State 48

   24 compstmt: block_start . stmtlist block_end

    ID         shift, and go to state 73
    NUM        shift, and go to state 35
    CHLIT      shift, and go to state 36
    INT        shift, and go to state 74
    CHAR       shift, and go to state 75
    IF         shift, and go to state 76
    WHILE      shift, and go to state 77
    SCANF      shift, and go to state 78
    PRINTF     shift, and go to state 79
    RETURN     shift, and go to state 80
    LPAREN     shift, and go to state 37
    SEMICOLON  shift, and go to state 81
    SUB        shift, and go to state 38

    stmtlist     go to state 82
    stmt         go to state 83
    declaration  go to state 84
    funcall      go to state 85
    fc           go to state 86
    whilestmt    go to state 87
    ifstmt       go to state 88
    returnstmt   go to state 89
    printstmt    go to state 90
    scanstmt     go to state 91
    expr         go to state 92
    identifier   go to state 40
    arrid        go to state 41
    declarray    go to state 93


State 49

   19 funcdecl: VOID vfid INT intid . COMMA INT intid RPAREN compstmt

    COMMA  shift, and go to state 94


State 50

   20 funcdecl: VOID vfid LPAREN INT . intid RPAREN compstmt

    ID  shift, and go to state 44

    intid  go to state 95


State 51

   21 funcdecl: VOID vfid LPAREN RPAREN . compstmt

    LBRACE  shift, and go to state 46

    compstmt     go to state 96
    block_start  go to state 48


State 52

    8 declstmt: CHAR cid assign SEMICOLON .

    $default  reduce using rule 8 (declstmt)


State 53

    7 declstmt: CHAR cid assign COMMA . cid assign SEMICOLON

    ID  shift, and go to state 15

    cid  go to state 97


State 54

   92 declarray: INT ID LSQ NUM RSQ . SEMICOLON

    SEMICOLON  shift, and go to state 98


State 55

   91 arrid: ID LSQ .

    $default  reduce using rule 91 (arrid)


State 56

   69 expr: expr . ADD $@2 expr
   71     | expr . SUB $@3 expr
   73     | expr . MUL $@4 expr
   75     | expr . DIV $@5 expr
   77     | expr . GEQ $@6 expr
   79     | expr . LEQ $@7 expr
   81     | expr . GT $@8 expr
   83     | expr . LT $@9 expr
   85     | expr . ISEQ $@10 expr
   87     | expr . NEQ $@11 expr
   88     | LPAREN expr . RPAREN

    RPAREN  shift, and go to state 99
    ADD     shift, and go to state 58
    SUB     shift, and go to state 59
    MUL     shift, and go to state 60
    DIV     shift, and go to state 61
    ISEQ    shift, and go to state 62
    GT      shift, and go to state 63
    LT      shift, and go to state 64
    GEQ     shift, and go to state 65
    LEQ     shift, and go to state 66
    NEQ     shift, and go to state 67


State 57

   69 expr: expr . ADD $@2 expr
   71     | expr . SUB $@3 expr
   73     | expr . MUL $@4 expr
   75     | expr . DIV $@5 expr
   77     | expr . GEQ $@6 expr
   79     | expr . LEQ $@7 expr
   81     | expr . GT $@8 expr
   83     | expr . LT $@9 expr
   85     | expr . ISEQ $@10 expr
   87     | expr . NEQ $@11 expr
   89     | SUB expr .

    $default  reduce using rule 89 (expr)


State 58

   69 expr: expr ADD . $@2 expr

    $default  reduce using rule 68 ($@2)

    $@2  go to state 100


State 59

   71 expr: expr SUB . $@3 expr

    $default  reduce using rule 70 ($@3)

    $@3  go to state 101


State 60

   73 expr: expr MUL . $@4 expr

    $default  reduce using rule 72 ($@4)

    $@4  go to state 102


State 61

   75 expr: expr DIV . $@5 expr

    $default  reduce using rule 74 ($@5)

    $@5  go to state 103


State 62

   85 expr: expr ISEQ . $@10 expr

    $default  reduce using rule 84 ($@10)

    $@10  go to state 104


State 63

   81 expr: expr GT . $@8 expr

    $default  reduce using rule 80 ($@8)

    $@8  go to state 105


State 64

   83 expr: expr LT . $@9 expr

    $default  reduce using rule 82 ($@9)

    $@9  go to state 106


State 65

   77 expr: expr GEQ . $@6 expr

    $default  reduce using rule 76 ($@6)

    $@6  go to state 107


State 66

   79 expr: expr LEQ . $@7 expr

    $default  reduce using rule 78 ($@7)

    $@7  go to state 108


State 67

   87 expr: expr NEQ . $@11 expr

    $default  reduce using rule 86 ($@11)

    $@11  go to state 109


State 68

   64 expr: identifier ASSIGN . $@1 expr

    $default  reduce using rule 63 ($@1)

    $@1  go to state 110


State 69

   65 expr: arrid expr . RSQ
   66     | arrid expr . RSQ ASSIGN expr
   67     | arrid expr . RSQ ASSIGN funcall
   69     | expr . ADD $@2 expr
   71     | expr . SUB $@3 expr
   73     | expr . MUL $@4 expr
   75     | expr . DIV $@5 expr
   77     | expr . GEQ $@6 expr
   79     | expr . LEQ $@7 expr
   81     | expr . GT $@8 expr
   83     | expr . LT $@9 expr
   85     | expr . ISEQ $@10 expr
   87     | expr . NEQ $@11 expr

    RSQ   shift, and go to state 111
    ADD   shift, and go to state 58
    SUB   shift, and go to state 59
    MUL   shift, and go to state 60
    DIV   shift, and go to state 61
    ISEQ  shift, and go to state 62
    GT    shift, and go to state 63
    LT    shift, and go to state 64
    GEQ   shift, and go to state 65
    LEQ   shift, and go to state 66
    NEQ   shift, and go to state 67


State 70

    5 declstmt: INT intid assign COMMA intid . assign SEMICOLON

    ASSIGN  shift, and go to state 24

    $default  reduce using rule 13 (assign)

    assign  go to state 112


State 71

   17 funcdecl: INT ifid INT intid RPAREN . compstmt

    LBRACE  shift, and go to state 46

    compstmt     go to state 113
    block_start  go to state 48


State 72

   16 funcdecl: INT ifid INT intid COMMA . INT intid RPAREN compstmt

    INT  shift, and go to state 114


State 73

   46 fc: ID . LPAREN
   90 identifier: ID .
   91 arrid: ID . LSQ

    LPAREN  shift, and go to state 115
    LSQ     shift, and go to state 55

    LPAREN    [reduce using rule 90 (identifier)]
    $default  reduce using rule 90 (identifier)


State 74

   38 declaration: INT . intid assign COMMA intid assign SEMICOLON
   39            | INT . intid assign SEMICOLON
   92 declarray: INT . ID LSQ NUM RSQ SEMICOLON

    ID  shift, and go to state 116

    intid  go to state 117


State 75

   40 declaration: CHAR . cid assign COMMA cid assign SEMICOLON
   41            | CHAR . cid assign SEMICOLON

    ID  shift, and go to state 15

    cid  go to state 118


State 76

   49 ifstmt: IF . LPAREN expr RPAREN compstmt
   50       | IF . LPAREN expr RPAREN compstmt ELSE compstmt
   51       | IF . LPAREN expr RPAREN stmt

    LPAREN  shift, and go to state 119


State 77

   47 whilestmt: WHILE . LPAREN expr RPAREN compstmt
   48          | WHILE . LPAREN expr RPAREN stmt

    LPAREN  shift, and go to state 120


State 78

   57 scanstmt: SCANF . LPAREN STRINGLIT RPAREN SEMICOLON
   58         | SCANF . LPAREN STRINGLIT COMMA AND ID RPAREN SEMICOLON
   59         | SCANF . LPAREN STRINGLIT COMMA AND ID COMMA AND ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 121


State 79

   54 printstmt: PRINTF . LPAREN STRINGLIT RPAREN SEMICOLON
   55          | PRINTF . LPAREN STRINGLIT COMMA ID RPAREN SEMICOLON
   56          | PRINTF . LPAREN STRINGLIT COMMA ID COMMA ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 122


State 80

   52 returnstmt: RETURN . expr SEMICOLON
   53           | RETURN . SEMICOLON

    ID         shift, and go to state 34
    NUM        shift, and go to state 35
    CHLIT      shift, and go to state 36
    LPAREN     shift, and go to state 37
    SEMICOLON  shift, and go to state 123
    SUB        shift, and go to state 38

    expr        go to state 124
    identifier  go to state 40
    arrid       go to state 41


State 81

   37 stmt: SEMICOLON .

    $default  reduce using rule 37 (stmt)


State 82

   24 compstmt: block_start stmtlist . block_end
   27 stmtlist: stmtlist . stmt

    ID         shift, and go to state 73
    NUM        shift, and go to state 35
    CHLIT      shift, and go to state 36
    INT        shift, and go to state 74
    CHAR       shift, and go to state 75
    IF         shift, and go to state 76
    WHILE      shift, and go to state 77
    SCANF      shift, and go to state 78
    PRINTF     shift, and go to state 79
    RETURN     shift, and go to state 80
    RBRACE     shift, and go to state 125
    LPAREN     shift, and go to state 37
    SEMICOLON  shift, and go to state 81
    SUB        shift, and go to state 38

    block_end    go to state 126
    stmt         go to state 127
    declaration  go to state 84
    funcall      go to state 85
    fc           go to state 86
    whilestmt    go to state 87
    ifstmt       go to state 88
    returnstmt   go to state 89
    printstmt    go to state 90
    scanstmt     go to state 91
    expr         go to state 92
    identifier   go to state 40
    arrid        go to state 41
    declarray    go to state 93


State 83

   28 stmtlist: stmt .

    $default  reduce using rule 28 (stmtlist)


State 84

   29 stmt: declaration .

    $default  reduce using rule 29 (stmt)


State 85

   30 stmt: funcall .

    $default  reduce using rule 30 (stmt)


State 86

   43 funcall: fc . expr COMMA expr RPAREN SEMICOLON
   44        | fc . expr RPAREN SEMICOLON
   45        | fc . RPAREN SEMICOLON

    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    CHLIT   shift, and go to state 36
    LPAREN  shift, and go to state 37
    RPAREN  shift, and go to state 128
    SUB     shift, and go to state 38

    expr        go to state 129
    identifier  go to state 40
    arrid       go to state 41


State 87

   31 stmt: whilestmt .

    $default  reduce using rule 31 (stmt)


State 88

   32 stmt: ifstmt .

    $default  reduce using rule 32 (stmt)


State 89

   33 stmt: returnstmt .

    $default  reduce using rule 33 (stmt)


State 90

   34 stmt: printstmt .

    $default  reduce using rule 34 (stmt)


State 91

   35 stmt: scanstmt .

    $default  reduce using rule 35 (stmt)


State 92

   36 stmt: expr .
   69 expr: expr . ADD $@2 expr
   71     | expr . SUB $@3 expr
   73     | expr . MUL $@4 expr
   75     | expr . DIV $@5 expr
   77     | expr . GEQ $@6 expr
   79     | expr . LEQ $@7 expr
   81     | expr . GT $@8 expr
   83     | expr . LT $@9 expr
   85     | expr . ISEQ $@10 expr
   87     | expr . NEQ $@11 expr

    ADD   shift, and go to state 58
    SUB   shift, and go to state 59
    MUL   shift, and go to state 60
    DIV   shift, and go to state 61
    ISEQ  shift, and go to state 62
    GT    shift, and go to state 63
    LT    shift, and go to state 64
    GEQ   shift, and go to state 65
    LEQ   shift, and go to state 66
    NEQ   shift, and go to state 67

    SUB       [reduce using rule 36 (stmt)]
    $default  reduce using rule 36 (stmt)


State 93

   42 declaration: declarray .

    $default  reduce using rule 42 (declaration)


State 94

   19 funcdecl: VOID vfid INT intid COMMA . INT intid RPAREN compstmt

    INT  shift, and go to state 130


State 95

   20 funcdecl: VOID vfid LPAREN INT intid . RPAREN compstmt

    RPAREN  shift, and go to state 131


State 96

   21 funcdecl: VOID vfid LPAREN RPAREN compstmt .

    $default  reduce using rule 21 (funcdecl)


State 97

    7 declstmt: CHAR cid assign COMMA cid . assign SEMICOLON

    ASSIGN  shift, and go to state 24

    $default  reduce using rule 13 (assign)

    assign  go to state 132


State 98

   92 declarray: INT ID LSQ NUM RSQ SEMICOLON .

    $default  reduce using rule 92 (declarray)


State 99

   88 expr: LPAREN expr RPAREN .

    $default  reduce using rule 88 (expr)


State 100

   69 expr: expr ADD $@2 . expr

    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    CHLIT   shift, and go to state 36
    LPAREN  shift, and go to state 37
    SUB     shift, and go to state 38

    expr        go to state 133
    identifier  go to state 40
    arrid       go to state 41


State 101

   71 expr: expr SUB $@3 . expr

    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    CHLIT   shift, and go to state 36
    LPAREN  shift, and go to state 37
    SUB     shift, and go to state 38

    expr        go to state 134
    identifier  go to state 40
    arrid       go to state 41


State 102

   73 expr: expr MUL $@4 . expr

    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    CHLIT   shift, and go to state 36
    LPAREN  shift, and go to state 37
    SUB     shift, and go to state 38

    expr        go to state 135
    identifier  go to state 40
    arrid       go to state 41


State 103

   75 expr: expr DIV $@5 . expr

    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    CHLIT   shift, and go to state 36
    LPAREN  shift, and go to state 37
    SUB     shift, and go to state 38

    expr        go to state 136
    identifier  go to state 40
    arrid       go to state 41


State 104

   85 expr: expr ISEQ $@10 . expr

    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    CHLIT   shift, and go to state 36
    LPAREN  shift, and go to state 37
    SUB     shift, and go to state 38

    expr        go to state 137
    identifier  go to state 40
    arrid       go to state 41


State 105

   81 expr: expr GT $@8 . expr

    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    CHLIT   shift, and go to state 36
    LPAREN  shift, and go to state 37
    SUB     shift, and go to state 38

    expr        go to state 138
    identifier  go to state 40
    arrid       go to state 41


State 106

   83 expr: expr LT $@9 . expr

    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    CHLIT   shift, and go to state 36
    LPAREN  shift, and go to state 37
    SUB     shift, and go to state 38

    expr        go to state 139
    identifier  go to state 40
    arrid       go to state 41


State 107

   77 expr: expr GEQ $@6 . expr

    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    CHLIT   shift, and go to state 36
    LPAREN  shift, and go to state 37
    SUB     shift, and go to state 38

    expr        go to state 140
    identifier  go to state 40
    arrid       go to state 41


State 108

   79 expr: expr LEQ $@7 . expr

    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    CHLIT   shift, and go to state 36
    LPAREN  shift, and go to state 37
    SUB     shift, and go to state 38

    expr        go to state 141
    identifier  go to state 40
    arrid       go to state 41


State 109

   87 expr: expr NEQ $@11 . expr

    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    CHLIT   shift, and go to state 36
    LPAREN  shift, and go to state 37
    SUB     shift, and go to state 38

    expr        go to state 142
    identifier  go to state 40
    arrid       go to state 41


State 110

   64 expr: identifier ASSIGN $@1 . expr

    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    CHLIT   shift, and go to state 36
    LPAREN  shift, and go to state 37
    SUB     shift, and go to state 38

    expr        go to state 143
    identifier  go to state 40
    arrid       go to state 41


State 111

   65 expr: arrid expr RSQ .
   66     | arrid expr RSQ . ASSIGN expr
   67     | arrid expr RSQ . ASSIGN funcall

    ASSIGN  shift, and go to state 144

    $default  reduce using rule 65 (expr)


State 112

    5 declstmt: INT intid assign COMMA intid assign . SEMICOLON

    SEMICOLON  shift, and go to state 145


State 113

   17 funcdecl: INT ifid INT intid RPAREN compstmt .

    $default  reduce using rule 17 (funcdecl)


State 114

   16 funcdecl: INT ifid INT intid COMMA INT . intid RPAREN compstmt

    ID  shift, and go to state 44

    intid  go to state 146


State 115

   46 fc: ID LPAREN .

    $default  reduce using rule 46 (fc)


State 116

   10 intid: ID .
   92 declarray: INT ID . LSQ NUM RSQ SEMICOLON

    LSQ  shift, and go to state 23

    $default  reduce using rule 10 (intid)


State 117

   38 declaration: INT intid . assign COMMA intid assign SEMICOLON
   39            | INT intid . assign SEMICOLON

    ASSIGN  shift, and go to state 24

    $default  reduce using rule 13 (assign)

    assign  go to state 147


State 118

   40 declaration: CHAR cid . assign COMMA cid assign SEMICOLON
   41            | CHAR cid . assign SEMICOLON

    ASSIGN  shift, and go to state 24

    $default  reduce using rule 13 (assign)

    assign  go to state 148


State 119

   49 ifstmt: IF LPAREN . expr RPAREN compstmt
   50       | IF LPAREN . expr RPAREN compstmt ELSE compstmt
   51       | IF LPAREN . expr RPAREN stmt

    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    CHLIT   shift, and go to state 36
    LPAREN  shift, and go to state 37
    SUB     shift, and go to state 38

    expr        go to state 149
    identifier  go to state 40
    arrid       go to state 41


State 120

   47 whilestmt: WHILE LPAREN . expr RPAREN compstmt
   48          | WHILE LPAREN . expr RPAREN stmt

    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    CHLIT   shift, and go to state 36
    LPAREN  shift, and go to state 37
    SUB     shift, and go to state 38

    expr        go to state 150
    identifier  go to state 40
    arrid       go to state 41


State 121

   57 scanstmt: SCANF LPAREN . STRINGLIT RPAREN SEMICOLON
   58         | SCANF LPAREN . STRINGLIT COMMA AND ID RPAREN SEMICOLON
   59         | SCANF LPAREN . STRINGLIT COMMA AND ID COMMA AND ID RPAREN SEMICOLON

    STRINGLIT  shift, and go to state 151


State 122

   54 printstmt: PRINTF LPAREN . STRINGLIT RPAREN SEMICOLON
   55          | PRINTF LPAREN . STRINGLIT COMMA ID RPAREN SEMICOLON
   56          | PRINTF LPAREN . STRINGLIT COMMA ID COMMA ID RPAREN SEMICOLON

    STRINGLIT  shift, and go to state 152


State 123

   53 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 53 (returnstmt)


State 124

   52 returnstmt: RETURN expr . SEMICOLON
   69 expr: expr . ADD $@2 expr
   71     | expr . SUB $@3 expr
   73     | expr . MUL $@4 expr
   75     | expr . DIV $@5 expr
   77     | expr . GEQ $@6 expr
   79     | expr . LEQ $@7 expr
   81     | expr . GT $@8 expr
   83     | expr . LT $@9 expr
   85     | expr . ISEQ $@10 expr
   87     | expr . NEQ $@11 expr

    SEMICOLON  shift, and go to state 153
    ADD        shift, and go to state 58
    SUB        shift, and go to state 59
    MUL        shift, and go to state 60
    DIV        shift, and go to state 61
    ISEQ       shift, and go to state 62
    GT         shift, and go to state 63
    LT         shift, and go to state 64
    GEQ        shift, and go to state 65
    LEQ        shift, and go to state 66
    NEQ        shift, and go to state 67


State 125

   26 block_end: RBRACE .

    $default  reduce using rule 26 (block_end)


State 126

   24 compstmt: block_start stmtlist block_end .

    $default  reduce using rule 24 (compstmt)


State 127

   27 stmtlist: stmtlist stmt .

    $default  reduce using rule 27 (stmtlist)


State 128

   45 funcall: fc RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 154


State 129

   43 funcall: fc expr . COMMA expr RPAREN SEMICOLON
   44        | fc expr . RPAREN SEMICOLON
   69 expr: expr . ADD $@2 expr
   71     | expr . SUB $@3 expr
   73     | expr . MUL $@4 expr
   75     | expr . DIV $@5 expr
   77     | expr . GEQ $@6 expr
   79     | expr . LEQ $@7 expr
   81     | expr . GT $@8 expr
   83     | expr . LT $@9 expr
   85     | expr . ISEQ $@10 expr
   87     | expr . NEQ $@11 expr

    RPAREN  shift, and go to state 155
    COMMA   shift, and go to state 156
    ADD     shift, and go to state 58
    SUB     shift, and go to state 59
    MUL     shift, and go to state 60
    DIV     shift, and go to state 61
    ISEQ    shift, and go to state 62
    GT      shift, and go to state 63
    LT      shift, and go to state 64
    GEQ     shift, and go to state 65
    LEQ     shift, and go to state 66
    NEQ     shift, and go to state 67


State 130

   19 funcdecl: VOID vfid INT intid COMMA INT . intid RPAREN compstmt

    ID  shift, and go to state 44

    intid  go to state 157


State 131

   20 funcdecl: VOID vfid LPAREN INT intid RPAREN . compstmt

    LBRACE  shift, and go to state 46

    compstmt     go to state 158
    block_start  go to state 48


State 132

    7 declstmt: CHAR cid assign COMMA cid assign . SEMICOLON

    SEMICOLON  shift, and go to state 159


State 133

   69 expr: expr . ADD $@2 expr
   69     | expr ADD $@2 expr .
   71     | expr . SUB $@3 expr
   73     | expr . MUL $@4 expr
   75     | expr . DIV $@5 expr
   77     | expr . GEQ $@6 expr
   79     | expr . LEQ $@7 expr
   81     | expr . GT $@8 expr
   83     | expr . LT $@9 expr
   85     | expr . ISEQ $@10 expr
   87     | expr . NEQ $@11 expr

    MUL   shift, and go to state 60
    DIV   shift, and go to state 61
    ISEQ  shift, and go to state 62
    GT    shift, and go to state 63
    LT    shift, and go to state 64
    GEQ   shift, and go to state 65
    LEQ   shift, and go to state 66
    NEQ   shift, and go to state 67

    $default  reduce using rule 69 (expr)


State 134

   69 expr: expr . ADD $@2 expr
   71     | expr . SUB $@3 expr
   71     | expr SUB $@3 expr .
   73     | expr . MUL $@4 expr
   75     | expr . DIV $@5 expr
   77     | expr . GEQ $@6 expr
   79     | expr . LEQ $@7 expr
   81     | expr . GT $@8 expr
   83     | expr . LT $@9 expr
   85     | expr . ISEQ $@10 expr
   87     | expr . NEQ $@11 expr

    MUL   shift, and go to state 60
    DIV   shift, and go to state 61
    ISEQ  shift, and go to state 62
    GT    shift, and go to state 63
    LT    shift, and go to state 64
    GEQ   shift, and go to state 65
    LEQ   shift, and go to state 66
    NEQ   shift, and go to state 67

    $default  reduce using rule 71 (expr)


State 135

   69 expr: expr . ADD $@2 expr
   71     | expr . SUB $@3 expr
   73     | expr . MUL $@4 expr
   73     | expr MUL $@4 expr .
   75     | expr . DIV $@5 expr
   77     | expr . GEQ $@6 expr
   79     | expr . LEQ $@7 expr
   81     | expr . GT $@8 expr
   83     | expr . LT $@9 expr
   85     | expr . ISEQ $@10 expr
   87     | expr . NEQ $@11 expr

    ISEQ  shift, and go to state 62
    GT    shift, and go to state 63
    LT    shift, and go to state 64
    GEQ   shift, and go to state 65
    LEQ   shift, and go to state 66
    NEQ   shift, and go to state 67

    $default  reduce using rule 73 (expr)


State 136

   69 expr: expr . ADD $@2 expr
   71     | expr . SUB $@3 expr
   73     | expr . MUL $@4 expr
   75     | expr . DIV $@5 expr
   75     | expr DIV $@5 expr .
   77     | expr . GEQ $@6 expr
   79     | expr . LEQ $@7 expr
   81     | expr . GT $@8 expr
   83     | expr . LT $@9 expr
   85     | expr . ISEQ $@10 expr
   87     | expr . NEQ $@11 expr

    ISEQ  shift, and go to state 62
    GT    shift, and go to state 63
    LT    shift, and go to state 64
    GEQ   shift, and go to state 65
    LEQ   shift, and go to state 66
    NEQ   shift, and go to state 67

    $default  reduce using rule 75 (expr)


State 137

   69 expr: expr . ADD $@2 expr
   71     | expr . SUB $@3 expr
   73     | expr . MUL $@4 expr
   75     | expr . DIV $@5 expr
   77     | expr . GEQ $@6 expr
   79     | expr . LEQ $@7 expr
   81     | expr . GT $@8 expr
   83     | expr . LT $@9 expr
   85     | expr . ISEQ $@10 expr
   85     | expr ISEQ $@10 expr .
   87     | expr . NEQ $@11 expr

    $default  reduce using rule 85 (expr)


State 138

   69 expr: expr . ADD $@2 expr
   71     | expr . SUB $@3 expr
   73     | expr . MUL $@4 expr
   75     | expr . DIV $@5 expr
   77     | expr . GEQ $@6 expr
   79     | expr . LEQ $@7 expr
   81     | expr . GT $@8 expr
   81     | expr GT $@8 expr .
   83     | expr . LT $@9 expr
   85     | expr . ISEQ $@10 expr
   87     | expr . NEQ $@11 expr

    $default  reduce using rule 81 (expr)


State 139

   69 expr: expr . ADD $@2 expr
   71     | expr . SUB $@3 expr
   73     | expr . MUL $@4 expr
   75     | expr . DIV $@5 expr
   77     | expr . GEQ $@6 expr
   79     | expr . LEQ $@7 expr
   81     | expr . GT $@8 expr
   83     | expr . LT $@9 expr
   83     | expr LT $@9 expr .
   85     | expr . ISEQ $@10 expr
   87     | expr . NEQ $@11 expr

    $default  reduce using rule 83 (expr)


State 140

   69 expr: expr . ADD $@2 expr
   71     | expr . SUB $@3 expr
   73     | expr . MUL $@4 expr
   75     | expr . DIV $@5 expr
   77     | expr . GEQ $@6 expr
   77     | expr GEQ $@6 expr .
   79     | expr . LEQ $@7 expr
   81     | expr . GT $@8 expr
   83     | expr . LT $@9 expr
   85     | expr . ISEQ $@10 expr
   87     | expr . NEQ $@11 expr

    $default  reduce using rule 77 (expr)


State 141

   69 expr: expr . ADD $@2 expr
   71     | expr . SUB $@3 expr
   73     | expr . MUL $@4 expr
   75     | expr . DIV $@5 expr
   77     | expr . GEQ $@6 expr
   79     | expr . LEQ $@7 expr
   79     | expr LEQ $@7 expr .
   81     | expr . GT $@8 expr
   83     | expr . LT $@9 expr
   85     | expr . ISEQ $@10 expr
   87     | expr . NEQ $@11 expr

    $default  reduce using rule 79 (expr)


State 142

   69 expr: expr . ADD $@2 expr
   71     | expr . SUB $@3 expr
   73     | expr . MUL $@4 expr
   75     | expr . DIV $@5 expr
   77     | expr . GEQ $@6 expr
   79     | expr . LEQ $@7 expr
   81     | expr . GT $@8 expr
   83     | expr . LT $@9 expr
   85     | expr . ISEQ $@10 expr
   87     | expr . NEQ $@11 expr
   87     | expr NEQ $@11 expr .

    $default  reduce using rule 87 (expr)


State 143

   64 expr: identifier ASSIGN $@1 expr .
   69     | expr . ADD $@2 expr
   71     | expr . SUB $@3 expr
   73     | expr . MUL $@4 expr
   75     | expr . DIV $@5 expr
   77     | expr . GEQ $@6 expr
   79     | expr . LEQ $@7 expr
   81     | expr . GT $@8 expr
   83     | expr . LT $@9 expr
   85     | expr . ISEQ $@10 expr
   87     | expr . NEQ $@11 expr

    $default  reduce using rule 64 (expr)


State 144

   66 expr: arrid expr RSQ ASSIGN . expr
   67     | arrid expr RSQ ASSIGN . funcall

    ID      shift, and go to state 73
    NUM     shift, and go to state 35
    CHLIT   shift, and go to state 36
    LPAREN  shift, and go to state 37
    SUB     shift, and go to state 38

    funcall     go to state 160
    fc          go to state 86
    expr        go to state 161
    identifier  go to state 40
    arrid       go to state 41


State 145

    5 declstmt: INT intid assign COMMA intid assign SEMICOLON .

    $default  reduce using rule 5 (declstmt)


State 146

   16 funcdecl: INT ifid INT intid COMMA INT intid . RPAREN compstmt

    RPAREN  shift, and go to state 162


State 147

   38 declaration: INT intid assign . COMMA intid assign SEMICOLON
   39            | INT intid assign . SEMICOLON

    SEMICOLON  shift, and go to state 163
    COMMA      shift, and go to state 164


State 148

   40 declaration: CHAR cid assign . COMMA cid assign SEMICOLON
   41            | CHAR cid assign . SEMICOLON

    SEMICOLON  shift, and go to state 165
    COMMA      shift, and go to state 166


State 149

   49 ifstmt: IF LPAREN expr . RPAREN compstmt
   50       | IF LPAREN expr . RPAREN compstmt ELSE compstmt
   51       | IF LPAREN expr . RPAREN stmt
   69 expr: expr . ADD $@2 expr
   71     | expr . SUB $@3 expr
   73     | expr . MUL $@4 expr
   75     | expr . DIV $@5 expr
   77     | expr . GEQ $@6 expr
   79     | expr . LEQ $@7 expr
   81     | expr . GT $@8 expr
   83     | expr . LT $@9 expr
   85     | expr . ISEQ $@10 expr
   87     | expr . NEQ $@11 expr

    RPAREN  shift, and go to state 167
    ADD     shift, and go to state 58
    SUB     shift, and go to state 59
    MUL     shift, and go to state 60
    DIV     shift, and go to state 61
    ISEQ    shift, and go to state 62
    GT      shift, and go to state 63
    LT      shift, and go to state 64
    GEQ     shift, and go to state 65
    LEQ     shift, and go to state 66
    NEQ     shift, and go to state 67


State 150

   47 whilestmt: WHILE LPAREN expr . RPAREN compstmt
   48          | WHILE LPAREN expr . RPAREN stmt
   69 expr: expr . ADD $@2 expr
   71     | expr . SUB $@3 expr
   73     | expr . MUL $@4 expr
   75     | expr . DIV $@5 expr
   77     | expr . GEQ $@6 expr
   79     | expr . LEQ $@7 expr
   81     | expr . GT $@8 expr
   83     | expr . LT $@9 expr
   85     | expr . ISEQ $@10 expr
   87     | expr . NEQ $@11 expr

    RPAREN  shift, and go to state 168
    ADD     shift, and go to state 58
    SUB     shift, and go to state 59
    MUL     shift, and go to state 60
    DIV     shift, and go to state 61
    ISEQ    shift, and go to state 62
    GT      shift, and go to state 63
    LT      shift, and go to state 64
    GEQ     shift, and go to state 65
    LEQ     shift, and go to state 66
    NEQ     shift, and go to state 67


State 151

   57 scanstmt: SCANF LPAREN STRINGLIT . RPAREN SEMICOLON
   58         | SCANF LPAREN STRINGLIT . COMMA AND ID RPAREN SEMICOLON
   59         | SCANF LPAREN STRINGLIT . COMMA AND ID COMMA AND ID RPAREN SEMICOLON

    RPAREN  shift, and go to state 169
    COMMA   shift, and go to state 170


State 152

   54 printstmt: PRINTF LPAREN STRINGLIT . RPAREN SEMICOLON
   55          | PRINTF LPAREN STRINGLIT . COMMA ID RPAREN SEMICOLON
   56          | PRINTF LPAREN STRINGLIT . COMMA ID COMMA ID RPAREN SEMICOLON

    RPAREN  shift, and go to state 171
    COMMA   shift, and go to state 172


State 153

   52 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 52 (returnstmt)


State 154

   45 funcall: fc RPAREN SEMICOLON .

    $default  reduce using rule 45 (funcall)


State 155

   44 funcall: fc expr RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 173


State 156

   43 funcall: fc expr COMMA . expr RPAREN SEMICOLON

    ID      shift, and go to state 34
    NUM     shift, and go to state 35
    CHLIT   shift, and go to state 36
    LPAREN  shift, and go to state 37
    SUB     shift, and go to state 38

    expr        go to state 174
    identifier  go to state 40
    arrid       go to state 41


State 157

   19 funcdecl: VOID vfid INT intid COMMA INT intid . RPAREN compstmt

    RPAREN  shift, and go to state 175


State 158

   20 funcdecl: VOID vfid LPAREN INT intid RPAREN compstmt .

    $default  reduce using rule 20 (funcdecl)


State 159

    7 declstmt: CHAR cid assign COMMA cid assign SEMICOLON .

    $default  reduce using rule 7 (declstmt)


State 160

   67 expr: arrid expr RSQ ASSIGN funcall .

    $default  reduce using rule 67 (expr)


State 161

   66 expr: arrid expr RSQ ASSIGN expr .
   69     | expr . ADD $@2 expr
   71     | expr . SUB $@3 expr
   73     | expr . MUL $@4 expr
   75     | expr . DIV $@5 expr
   77     | expr . GEQ $@6 expr
   79     | expr . LEQ $@7 expr
   81     | expr . GT $@8 expr
   83     | expr . LT $@9 expr
   85     | expr . ISEQ $@10 expr
   87     | expr . NEQ $@11 expr

    $default  reduce using rule 66 (expr)


State 162

   16 funcdecl: INT ifid INT intid COMMA INT intid RPAREN . compstmt

    LBRACE  shift, and go to state 46

    compstmt     go to state 176
    block_start  go to state 48


State 163

   39 declaration: INT intid assign SEMICOLON .

    $default  reduce using rule 39 (declaration)


State 164

   38 declaration: INT intid assign COMMA . intid assign SEMICOLON

    ID  shift, and go to state 44

    intid  go to state 177


State 165

   41 declaration: CHAR cid assign SEMICOLON .

    $default  reduce using rule 41 (declaration)


State 166

   40 declaration: CHAR cid assign COMMA . cid assign SEMICOLON

    ID  shift, and go to state 15

    cid  go to state 178


State 167

   49 ifstmt: IF LPAREN expr RPAREN . compstmt
   50       | IF LPAREN expr RPAREN . compstmt ELSE compstmt
   51       | IF LPAREN expr RPAREN . stmt

    ID         shift, and go to state 73
    NUM        shift, and go to state 35
    CHLIT      shift, and go to state 36
    INT        shift, and go to state 74
    CHAR       shift, and go to state 75
    IF         shift, and go to state 76
    WHILE      shift, and go to state 77
    SCANF      shift, and go to state 78
    PRINTF     shift, and go to state 79
    RETURN     shift, and go to state 80
    LBRACE     shift, and go to state 46
    LPAREN     shift, and go to state 37
    SEMICOLON  shift, and go to state 81
    SUB        shift, and go to state 38

    compstmt     go to state 179
    block_start  go to state 48
    stmt         go to state 180
    declaration  go to state 84
    funcall      go to state 85
    fc           go to state 86
    whilestmt    go to state 87
    ifstmt       go to state 88
    returnstmt   go to state 89
    printstmt    go to state 90
    scanstmt     go to state 91
    expr         go to state 92
    identifier   go to state 40
    arrid        go to state 41
    declarray    go to state 93


State 168

   47 whilestmt: WHILE LPAREN expr RPAREN . compstmt
   48          | WHILE LPAREN expr RPAREN . stmt

    ID         shift, and go to state 73
    NUM        shift, and go to state 35
    CHLIT      shift, and go to state 36
    INT        shift, and go to state 74
    CHAR       shift, and go to state 75
    IF         shift, and go to state 76
    WHILE      shift, and go to state 77
    SCANF      shift, and go to state 78
    PRINTF     shift, and go to state 79
    RETURN     shift, and go to state 80
    LBRACE     shift, and go to state 46
    LPAREN     shift, and go to state 37
    SEMICOLON  shift, and go to state 81
    SUB        shift, and go to state 38

    compstmt     go to state 181
    block_start  go to state 48
    stmt         go to state 182
    declaration  go to state 84
    funcall      go to state 85
    fc           go to state 86
    whilestmt    go to state 87
    ifstmt       go to state 88
    returnstmt   go to state 89
    printstmt    go to state 90
    scanstmt     go to state 91
    expr         go to state 92
    identifier   go to state 40
    arrid        go to state 41
    declarray    go to state 93


State 169

   57 scanstmt: SCANF LPAREN STRINGLIT RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 183


State 170

   58 scanstmt: SCANF LPAREN STRINGLIT COMMA . AND ID RPAREN SEMICOLON
   59         | SCANF LPAREN STRINGLIT COMMA . AND ID COMMA AND ID RPAREN SEMICOLON

    AND  shift, and go to state 184


State 171

   54 printstmt: PRINTF LPAREN STRINGLIT RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 185


State 172

   55 printstmt: PRINTF LPAREN STRINGLIT COMMA . ID RPAREN SEMICOLON
   56          | PRINTF LPAREN STRINGLIT COMMA . ID COMMA ID RPAREN SEMICOLON

    ID  shift, and go to state 186


State 173

   44 funcall: fc expr RPAREN SEMICOLON .

    $default  reduce using rule 44 (funcall)


State 174

   43 funcall: fc expr COMMA expr . RPAREN SEMICOLON
   69 expr: expr . ADD $@2 expr
   71     | expr . SUB $@3 expr
   73     | expr . MUL $@4 expr
   75     | expr . DIV $@5 expr
   77     | expr . GEQ $@6 expr
   79     | expr . LEQ $@7 expr
   81     | expr . GT $@8 expr
   83     | expr . LT $@9 expr
   85     | expr . ISEQ $@10 expr
   87     | expr . NEQ $@11 expr

    RPAREN  shift, and go to state 187
    ADD     shift, and go to state 58
    SUB     shift, and go to state 59
    MUL     shift, and go to state 60
    DIV     shift, and go to state 61
    ISEQ    shift, and go to state 62
    GT      shift, and go to state 63
    LT      shift, and go to state 64
    GEQ     shift, and go to state 65
    LEQ     shift, and go to state 66
    NEQ     shift, and go to state 67


State 175

   19 funcdecl: VOID vfid INT intid COMMA INT intid RPAREN . compstmt

    LBRACE  shift, and go to state 46

    compstmt     go to state 188
    block_start  go to state 48


State 176

   16 funcdecl: INT ifid INT intid COMMA INT intid RPAREN compstmt .

    $default  reduce using rule 16 (funcdecl)


State 177

   38 declaration: INT intid assign COMMA intid . assign SEMICOLON

    ASSIGN  shift, and go to state 24

    $default  reduce using rule 13 (assign)

    assign  go to state 189


State 178

   40 declaration: CHAR cid assign COMMA cid . assign SEMICOLON

    ASSIGN  shift, and go to state 24

    $default  reduce using rule 13 (assign)

    assign  go to state 190


State 179

   49 ifstmt: IF LPAREN expr RPAREN compstmt .
   50       | IF LPAREN expr RPAREN compstmt . ELSE compstmt

    ELSE  shift, and go to state 191

    $default  reduce using rule 49 (ifstmt)


State 180

   51 ifstmt: IF LPAREN expr RPAREN stmt .

    $default  reduce using rule 51 (ifstmt)


State 181

   47 whilestmt: WHILE LPAREN expr RPAREN compstmt .

    $default  reduce using rule 47 (whilestmt)


State 182

   48 whilestmt: WHILE LPAREN expr RPAREN stmt .

    $default  reduce using rule 48 (whilestmt)


State 183

   57 scanstmt: SCANF LPAREN STRINGLIT RPAREN SEMICOLON .

    $default  reduce using rule 57 (scanstmt)


State 184

   58 scanstmt: SCANF LPAREN STRINGLIT COMMA AND . ID RPAREN SEMICOLON
   59         | SCANF LPAREN STRINGLIT COMMA AND . ID COMMA AND ID RPAREN SEMICOLON

    ID  shift, and go to state 192


State 185

   54 printstmt: PRINTF LPAREN STRINGLIT RPAREN SEMICOLON .

    $default  reduce using rule 54 (printstmt)


State 186

   55 printstmt: PRINTF LPAREN STRINGLIT COMMA ID . RPAREN SEMICOLON
   56          | PRINTF LPAREN STRINGLIT COMMA ID . COMMA ID RPAREN SEMICOLON

    RPAREN  shift, and go to state 193
    COMMA   shift, and go to state 194


State 187

   43 funcall: fc expr COMMA expr RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 195


State 188

   19 funcdecl: VOID vfid INT intid COMMA INT intid RPAREN compstmt .

    $default  reduce using rule 19 (funcdecl)


State 189

   38 declaration: INT intid assign COMMA intid assign . SEMICOLON

    SEMICOLON  shift, and go to state 196


State 190

   40 declaration: CHAR cid assign COMMA cid assign . SEMICOLON

    SEMICOLON  shift, and go to state 197


State 191

   50 ifstmt: IF LPAREN expr RPAREN compstmt ELSE . compstmt

    LBRACE  shift, and go to state 46

    compstmt     go to state 198
    block_start  go to state 48


State 192

   58 scanstmt: SCANF LPAREN STRINGLIT COMMA AND ID . RPAREN SEMICOLON
   59         | SCANF LPAREN STRINGLIT COMMA AND ID . COMMA AND ID RPAREN SEMICOLON

    RPAREN  shift, and go to state 199
    COMMA   shift, and go to state 200


State 193

   55 printstmt: PRINTF LPAREN STRINGLIT COMMA ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 201


State 194

   56 printstmt: PRINTF LPAREN STRINGLIT COMMA ID COMMA . ID RPAREN SEMICOLON

    ID  shift, and go to state 202


State 195

   43 funcall: fc expr COMMA expr RPAREN SEMICOLON .

    $default  reduce using rule 43 (funcall)


State 196

   38 declaration: INT intid assign COMMA intid assign SEMICOLON .

    $default  reduce using rule 38 (declaration)


State 197

   40 declaration: CHAR cid assign COMMA cid assign SEMICOLON .

    $default  reduce using rule 40 (declaration)


State 198

   50 ifstmt: IF LPAREN expr RPAREN compstmt ELSE compstmt .

    $default  reduce using rule 50 (ifstmt)


State 199

   58 scanstmt: SCANF LPAREN STRINGLIT COMMA AND ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 203


State 200

   59 scanstmt: SCANF LPAREN STRINGLIT COMMA AND ID COMMA . AND ID RPAREN SEMICOLON

    AND  shift, and go to state 204


State 201

   55 printstmt: PRINTF LPAREN STRINGLIT COMMA ID RPAREN SEMICOLON .

    $default  reduce using rule 55 (printstmt)


State 202

   56 printstmt: PRINTF LPAREN STRINGLIT COMMA ID COMMA ID . RPAREN SEMICOLON

    RPAREN  shift, and go to state 205


State 203

   58 scanstmt: SCANF LPAREN STRINGLIT COMMA AND ID RPAREN SEMICOLON .

    $default  reduce using rule 58 (scanstmt)


State 204

   59 scanstmt: SCANF LPAREN STRINGLIT COMMA AND ID COMMA AND . ID RPAREN SEMICOLON

    ID  shift, and go to state 206


State 205

   56 printstmt: PRINTF LPAREN STRINGLIT COMMA ID COMMA ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 207


State 206

   59 scanstmt: SCANF LPAREN STRINGLIT COMMA AND ID COMMA AND ID . RPAREN SEMICOLON

    RPAREN  shift, and go to state 208


State 207

   56 printstmt: PRINTF LPAREN STRINGLIT COMMA ID COMMA ID RPAREN SEMICOLON .

    $default  reduce using rule 56 (printstmt)


State 208

   59 scanstmt: SCANF LPAREN STRINGLIT COMMA AND ID COMMA AND ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 209


State 209

   59 scanstmt: SCANF LPAREN STRINGLIT COMMA AND ID COMMA AND ID RPAREN SEMICOLON .

    $default  reduce using rule 59 (scanstmt)
